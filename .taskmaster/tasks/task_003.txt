# Task ID: 3
# Title: 비밀번호 보안 시스템 구현
# Status: pending
# Dependencies: 1, 2, 13 (Not found)
# Priority: high
# Description: 스플래시 화면 이후에 표시되는 앱 소개 모달과 4자리 비밀번호 설정, 그리고 이후 실행 시 비밀번호 입력 시스템을 구현합니다.
# Details:
1. 암호화 라이브러리 설치: `npm install expo-crypto`
2. 비밀번호 해싱 유틸리티 함수 구현:
   - `hashPassword`: 4자리 비밀번호를 안전하게 해싱
   - `verifyPassword`: 입력된 비밀번호와 저장된 해시 비교
3. 비밀번호 관련 컴포넌트 구현:
   - 숫자 키패드 컴포넌트: 4자리 비밀번호 입력용
   - 비밀번호 설정 화면: 초기 비밀번호 설정 및 확인
   - 비밀번호 변경 화면: 기존 비밀번호 확인 후 새 비밀번호 설정
4. 앱 잠금 시스템 구현:
   - 앱 시작 시 비밀번호 확인
   - 앱이 백그라운드로 갔다가 돌아올 때 비밀번호 재확인
   - 비밀번호 오입력 시 시각적 피드백 (애니메이션)
5. 앱 소개 모달 구현: 앱 최초 실행 시 주요 기능 소개
6. 앱 백그라운드 시 화면 숨김 기능: `expo-screen-capture` 사용

# Test Strategy:
1. 비밀번호 해싱 테스트: 동일한 비밀번호가 항상 동일하게 검증되는지 확인
2. 비밀번호 검증 테스트: 올바른/잘못된 비밀번호 입력 시 적절한 결과 반환 확인
3. UI 테스트: 비밀번호 입력 컴포넌트가 올바르게 작동하는지 확인
4. 앱 상태 변경 테스트: 앱이 백그라운드에서 포그라운드로 돌아올 때 잠금 화면 표시 확인
5. 에러 케이스 테스트: 비밀번호 오입력 시 적절한 피드백 제공 확인
6. 앱 소개 모달 테스트: 최초 실행 시에만 표시되는지 확인

# Subtasks:
## 1. 숫자 키패드 컴포넌트 구현 [pending]
### Dependencies: None
### Description: 4자리 비밀번호 입력을 위한 숫자 키패드 컴포넌트를 구현합니다. 이 컴포넌트는 비밀번호 설정 및 입력 화면에서 재사용됩니다.
### Details:
1. src/components/NumericKeypad.tsx 파일 생성
2. 0-9 숫자 버튼과 삭제 버튼 구현
3. 입력된 비밀번호를 표시하는 UI 구현 (점 또는 별표로 표시)
4. 비밀번호 입력 완료 시 콜백 함수 호출
5. 비밀번호 입력 오류 시 진동 피드백 추가
6. 스타일링 및 애니메이션 적용

## 2. 앱 소개 모달 및 비밀번호 설정 화면 구현 [pending]
### Dependencies: 3.1
### Description: 앱 최초 실행 시 표시되는 소개 모달과 비밀번호 설정 화면을 구현합니다.
### Details:
1. src/components/IntroModal.tsx 파일 생성
   - 앱의 주요 기능 소개 슬라이드 구현
   - 모달 닫기 및 '시작하기' 버튼 구현
   - AsyncStorage에 'isFirstLaunch' 플래그 저장

2. src/screens/SetPasswordScreen.tsx 파일 생성
   - NumericKeypad 컴포넌트 활용
   - 비밀번호 입력 및 재확인 로직 구현
   - 경고 메시지 표시: '비밀번호를 잊어버리면 앱을 삭제하고 재설치해야 합니다'
   - expo-crypto를 사용한 비밀번호 해싱 및 AsyncStorage에 저장

## 3. 비밀번호 입력 화면 및 검증 로직 구현 [pending]
### Dependencies: 3.1, 3.2
### Description: 앱 실행 시 표시되는 비밀번호 입력 화면과 검증 로직을 구현합니다.
### Details:
1. src/screens/EnterPasswordScreen.tsx 파일 생성
   - NumericKeypad 컴포넌트 활용
   - 저장된 비밀번호 해시와 입력된 비밀번호 비교 로직 구현
   - 틀린 비밀번호 입력 시 에러 애니메이션 및 메시지 표시
   - 5회 실패 시 1분 대기 로직 구현

2. src/utils/passwordUtils.ts 파일 생성
   - hashPassword: 비밀번호 해싱 함수 구현
   - verifyPassword: 입력된 비밀번호와 저장된 해시 비교 함수 구현
   - 비밀번호 시도 횟수 및 잠금 상태 관리 함수 구현

## 4. 자동 잠금 시스템 구현 [pending]
### Dependencies: 3.3
### Description: 앱이 백그라운드로 전환될 때 자동으로 잠기고, 포그라운드로 돌아올 때 비밀번호를 요구하는 시스템을 구현합니다.
### Details:
1. src/contexts/AppLockContext.tsx 파일 생성
   - 앱 잠금 상태 관리를 위한 Context API 구현
   - AppState 이벤트 리스너 설정
   - 백그라운드 전환 시 자동 잠금 로직
   - 포그라운드 복귀 시 비밀번호 확인 로직

2. expo-screen-capture 설치 및 구성
   - 스크린샷 방지 기능 구현
   - 앱 보안 상태에 따른 스크린샷 허용/차단 로직

3. src/App.tsx 파일 수정
   - AppLockContext Provider 추가
   - 앱 상태에 따른 화면 전환 로직 구현

## 5. 비밀번호 관리 기능 구현 [pending]
### Dependencies: 3.3, 3.4
### Description: 설정 화면에서 비밀번호를 변경하고 관리할 수 있는 기능을 구현합니다.
### Details:
1. src/screens/PasswordManagementScreen.tsx 파일 생성
   - 현재 비밀번호 확인 로직
   - 새 비밀번호 설정 및 확인 로직
   - 비밀번호 변경 성공/실패 피드백

2. src/screens/SettingsScreen.tsx 파일 수정
   - 비밀번호 변경 옵션 추가
   - 앱 초기화 옵션 추가 (비밀번호 분실 시)
   - 자동 잠금 설정 옵션 추가 (즉시/1분 후/5분 후/사용 안 함)

3. 비밀번호 초기화 로직 구현
   - 앱 데이터 초기화 경고 및 확인 절차
   - AsyncStorage 데이터 초기화 함수

